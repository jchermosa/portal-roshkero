Index: ../FRONTEND/portalroshkafrontend/src/pages/LoginPage.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// src/pages/Login.tsx\r\nimport { useState, useEffect } from \"react\";\r\nimport type { FormEvent } from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { logo, logo_white_transparent, heroBg } from \"../assets\";\r\nimport LoadingButton from \"../components/LoadingButton\";\r\n\r\nexport default function Login() {\r\n  const { login, user } = useAuth();\r\n  const nav = useNavigate();\r\n\r\n  const [correo, setCorreo] = useState(\"\");\r\n  const [contrasena, setContrasena] = useState(\"\");\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Estados para animación\r\n  const [showSplash, setShowSplash] = useState(true);\r\n  const [phase, setPhase] = useState<\"start\" | \"grow\" | \"move\" | \"done\">(\"start\");\r\n\r\n  useEffect(() => {\r\n    // Fase 1: giro y crecimiento\r\n    const growTimer = setTimeout(() => setPhase(\"grow\"), 100); \r\n    // Fase 2: mover arriba\r\n    const moveTimer = setTimeout(() => setPhase(\"move\"), 1500);\r\n    // Fase 3: mostrar login\r\n    const doneTimer = setTimeout(() => {\r\n      setPhase(\"done\");\r\n      setShowSplash(false);\r\n    }, 2500);\r\n\r\n    return () => {\r\n      clearTimeout(growTimer);\r\n      clearTimeout(moveTimer);\r\n      clearTimeout(doneTimer);\r\n    };\r\n  }, []);\r\n\r\n  // Dark mode toggle\r\n  const [darkMode, setDarkMode] = useState(\r\n    () =>\r\n      document.documentElement.classList.contains(\"dark\") ||\r\n      localStorage.getItem(\"theme\") === \"dark\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.add(\"dark\");\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n      localStorage.setItem(\"theme\", \"light\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      nav(\"/\");\r\n    }\r\n  }, [user]);\r\n\r\n  const onSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await fetch(`${import.meta.env.VITE_API_URL}/api/auth/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ correo, contrasena }),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errorText = await res.text();\r\n        throw new Error(errorText);\r\n      }\r\n\r\n      const { token } = await res.json();\r\n      login(token);\r\n    } catch (err: any) {\r\n      setError(err?.message ?? \"Credenciales inválidas\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative min-h-screen flex items-center justify-center overflow-hidden\">\r\n      {/* --- SPLASH ANIMADO --- */}\r\n      {showSplash && (\r\n        <div className=\"flex items-center justify-center absolute inset-0 bg-[radial-gradient(circle_at_center,_#1D75BD_0%,_#0a3d62_100%)] z-50\">\r\n          <img\r\n            src={logo_white_transparent}\r\n            alt=\"Splash Logo\"\r\n            className={`\r\n              w-32 h-32 object-contain transform transition-all duration-1000 ease-out\r\n              ${phase === \"start\" ? \"scale-50 rotate-0 opacity-0\" : \"\"}\r\n              ${phase === \"grow\" ? \"scale-125 rotate-180 opacity-100\" : \"\"}\r\n              ${phase === \"move\" ? \"-translate-y-36 scale-100 rotate-360 opacity-100\" : \"\"}\r\n            `}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Fondo */}\r\n      <div\r\n        className=\"absolute inset-0 bg-brand-blue\"\r\n        style={{\r\n          backgroundImage: `url(${heroBg})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n        }}\r\n      >\r\n        <div className=\"absolute inset-0 bg-brand-blue/40\"></div>\r\n      </div>\r\n\r\n      {/* Toggle dark mode */}\r\n      <button\r\n        onClick={() => setDarkMode((prev) => !prev)}\r\n        type=\"button\"\r\n        className=\"absolute top-4 right-4 z-20 text-2xl transition-transform transform hover:scale-110\"\r\n      >\r\n        {darkMode ? \"\uD83C\uDF19\" : \"\uD83C\uDF1E\"}\r\n      </button>\r\n\r\n      {/* Contenedor del login */}\r\n      <div\r\n        className={`relative z-10 w-full max-w-md bg-white/95 dark:bg-gray-900/90 backdrop-blur-sm shadow-2xl rounded-2xl p-10 transform transition-all duration-1000\r\n          ${phase === \"move\" || phase === \"done\" ? \"translate-y-0 opacity-100 delay-500\" : \"translate-y-12 opacity-0\"}\r\n        `}\r\n      >\r\n        {/* Logo + título */}\r\n        <div className=\"text-center mb-8\">\r\n          <img\r\n            src={logo}\r\n            alt=\"Logo Roshka\"\r\n            className=\"h-32 w-auto mx-auto mb-6 object-cover rounded-full shadow-md\"\r\n          />\r\n          <h1 className=\"text-2xl font-semibold text-brand-blue dark:text-white\">\r\n            INICIAR SESIÓN\r\n          </h1>\r\n        </div>\r\n\r\n        {/* Formulario */}\r\n        <form onSubmit={onSubmit} className=\"space-y-6\">\r\n          {/* Input correo */}\r\n          <div className=\"relative\">\r\n            <div className=\"absolute left-5 top-1/2 -translate-y-1/2 text-blue-400 dark:text-gray-400\">\r\n              <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" />\r\n              </svg>\r\n            </div>\r\n            <input\r\n              type=\"email\"\r\n              value={correo}\r\n              onChange={(e) => setCorreo(e.target.value)}\r\n              required\r\n              placeholder=\"Correo electrónico\"\r\n              className=\"w-full border-0 rounded-full px-14 py-4 text-blue-900 dark:text-gray-100 placeholder-blue-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-inner text-lg\r\n                         bg-gradient-to-r from-blue-50 to-blue-100 dark:from-gray-700 dark:to-gray-800\"\r\n            />\r\n          </div>\r\n\r\n          {/* Input contraseña */}\r\n          <div className=\"relative\">\r\n            <div className=\"absolute left-5 top-1/2 -translate-y-1/2 text-blue-400 dark:text-gray-400\">\r\n              <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\r\n                  clipRule=\"evenodd\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <input\r\n              type=\"password\"\r\n              value={contrasena}\r\n              onChange={(e) => setContrasena(e.target.value)}\r\n              required\r\n              placeholder=\"Contraseña\"\r\n              className=\"w-full border-0 rounded-full px-14 py-4 text-blue-900 dark:text-gray-100 placeholder-blue-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-inner text-lg\r\n                         bg-gradient-to-r from-blue-50 to-blue-100 dark:from-gray-700 dark:to-gray-800\"\r\n            />\r\n          </div>\r\n\r\n          {/* Link olvidar contraseña */}\r\n          <div className=\"text-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"text-sm text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 font-medium\"\r\n            >\r\n              ¿Olvidaste tu contraseña?\r\n            </button>\r\n          </div>\r\n\r\n          {/* Error */}\r\n          {error && (\r\n            <div className=\"text-sm text-red-600 dark:text-red-400 bg-red-50 dark:bg-red-900/40 p-3 rounded-xl text-center border border-red-100 dark:border-red-700\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          {/* Botón ingresar */}\r\n          <LoadingButton\r\n            type=\"submit\"\r\n            loading={loading}\r\n            text=\"INGRESAR\"\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white dark:bg-blue-600 dark:hover:bg-blue-700\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FRONTEND/portalroshkafrontend/src/pages/LoginPage.tsx b/../FRONTEND/portalroshkafrontend/src/pages/LoginPage.tsx
--- a/../FRONTEND/portalroshkafrontend/src/pages/LoginPage.tsx	(revision 52bd4791bd70222a014b41ea6aef129a352ff8da)
+++ b/../FRONTEND/portalroshkafrontend/src/pages/LoginPage.tsx	(date 1759270297602)
@@ -66,7 +66,7 @@
     setLoading(true);
 
     try {
-      const res = await fetch(`${import.meta.env.VITE_API_URL}/api/auth/login`, {
+      const res = await fetch(`${import.meta.env.VITE_API_URL}/login`, {
         method: "POST",
         headers: { "Content-Type": "application/json" },
         body: JSON.stringify({ correo, contrasena }),
Index: ../FRONTEND/portalroshkafrontend/src/services/AuthService.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const BASE = import.meta.env.VITE_API_BASE ?? \"http://localhost:8080\";\r\n\r\nexport type AuthRequest = {\r\n  correo: string;\r\n  contrasena: string;\r\n};\r\n\r\nexport type AuthResponse = {\r\n  token: string;\r\n};\r\n\r\n// \uD83D\uDD11 Login normal\r\nexport async function login(req: AuthRequest): Promise<string> {\r\n  const res = await fetch(`${BASE}/api/auth/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(req),\r\n    credentials: \"include\",\r\n  });\r\n  if (!res.ok) {\r\n    const txt = await res.text();\r\n    throw new Error(txt || \"Login falló\");\r\n  }\r\n  const data: AuthResponse = await res.json();\r\n  return data.token;\r\n}\r\n\r\n// \uD83D\uDD11 Registro (opcional)\r\nexport async function register(req: any): Promise<string> {\r\n  const res = await fetch(`${BASE}/api/auth/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(req),\r\n  });\r\n  if (!res.ok) {\r\n    const txt = await res.text();\r\n    throw new Error(txt || \"Registro falló\");\r\n  }\r\n  const data: AuthResponse = await res.json();\r\n  return data.token;\r\n}\r\n\r\n// \uD83D\uDD04 Cambio de contraseña (real)\r\nexport async function updatePassword(token: string, newPassword: string): Promise<string> {\r\n  const res = await fetch(`${BASE}/api/auth/update-password`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ contrasena: newPassword }),\r\n  });\r\n  if (!res.ok) {\r\n    const txt = await res.text();\r\n    throw new Error(txt || \"Error al actualizar contraseña\");\r\n  }\r\n  const data: AuthResponse = await res.json();\r\n  return data.token; // \uD83D\uDCCC nuevo token sin `requiereCambioContrasena`\r\n}\r\n\r\n// \uD83D\uDD04 Cambio de contraseña (mock)\r\nexport async function updatePasswordMock(token: string, newPassword: string): Promise<string> {\r\n  console.log(\"Mock updatePassword:\", { token, newPassword });\r\n\r\n  // Simula un nuevo token válido sin `requiereCambioContrasena`\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(\r\n        \"mock.jwt.token.sin_requiereCambioContrasena\"\r\n      );\r\n    }, 1000);\r\n  });\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FRONTEND/portalroshkafrontend/src/services/AuthService.ts b/../FRONTEND/portalroshkafrontend/src/services/AuthService.ts
--- a/../FRONTEND/portalroshkafrontend/src/services/AuthService.ts	(revision 52bd4791bd70222a014b41ea6aef129a352ff8da)
+++ b/../FRONTEND/portalroshkafrontend/src/services/AuthService.ts	(date 1759270331444)
@@ -11,7 +11,7 @@
 
 // 🔑 Login normal
 export async function login(req: AuthRequest): Promise<string> {
-  const res = await fetch(`${BASE}/api/auth/login`, {
+  const res = await fetch(`${BASE}/login`, {
     method: "POST",
     headers: { "Content-Type": "application/json" },
     body: JSON.stringify(req),
Index: portalroshkabackend/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.application.name=portalroshkabackend\r\n
===================================================================
diff --git a/portalroshkabackend/src/main/resources/application.properties b/portalroshkabackend/src/main/resources/application.properties
--- a/portalroshkabackend/src/main/resources/application.properties	(revision 52bd4791bd70222a014b41ea6aef129a352ff8da)
+++ b/portalroshkabackend/src/main/resources/application.properties	(date 1759322189429)
@@ -1,1 +1,14 @@
 spring.application.name=portalroshkabackend
+
+
+spring.datasource.url=jdbc:postgresql://localhost:5432/portal3
+spring.datasource.username=postgres
+spring.datasource.password=isaias018
+spring.datasource.driver-class-name=org.postgresql.Driver
+spring.jpa.show-sql:true
+spring.jpa.hibernate.ddl-auto:none
+spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
+
+spring.thymeleaf.cache=false
+spring.thymeleaf.prefix=classpath:/templates/
+spring.thymeleaf.suffix=.html
\ No newline at end of file
